var t=Object.defineProperty,e=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,h=(e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i;const n=0,o=1,c=2,d=3,l=[0,1,-1,0],u=[-1,0,0,1],g=t=>Math.round(1e4*(t+Number.EPSILON))/1e4,y=[1,2],b=/^rgba\((\d+),[ ]?(\d+),[ ]?(\d+), [ ]?[\d\.]+\)$/,f=/^rgb\((\d+),[ ]?(\d+),[ ]?(\d+)\)$/,p=t=>{let e=b.exec(t);return e?{r:parseInt(e[1]),g:parseInt(e[2]),b:parseInt(e[3]),a:parseFloat(e[4])}:(e=f.exec(t),e?{r:parseInt(e[1]),g:parseInt(e[2]),b:parseInt(e[3]),a:1}:void 0)},w=({r:t,g:e,b:s,a:i})=>`rgba(${t},${e},${s},${i})`,m=t=>({w:t.width,h:t.height}),k=(t,e,s)=>{(t=>{const{w:e,h:s}=m(t);t.getContext("2d").clearRect(0,0,e,s)})(t);const i=t.getContext("2d");i.save(),i.globalCompositeOperation="color",e.getDim();for(let r=0;r<e.w;r++)for(let i=0;i<e.h;i++)v(t,e,{x:r,y:i},s);i.restore()},v=(t,e,{x:s,y:i},r)=>{const{w:a,h:h}=e.getDim(),{w:n,h:o}=m(t),c=n/a,d=o/h,l={x:s*c,y:i*d,w:c,h:d},u=e.at({x:s,y:i});u.getTypes().forEach((e=>{u.getOwnerIds(e).map((t=>r.get(e,t))).forEach((e=>x(t,l,e)))}))},x=(t,e,s)=>{t.getContext("2d").drawImage(s,e.x,e.y,e.w,e.h)},O={[c]:1,[d]:.25},I={[c]:.1,[d]:.01,[o]:.4},j=class{constructor(t){this.keyCtrl=t,this.directionQueue=[]}join(t){this.snake=new class{constructor(){this.body=[],this.stomach=0,this.sanity=1}toDebugStr(){return`snake=${this.id} len=${this.body.length} stomach=${this.stomach} sanity=${this.sanity}`}getHead(){return this.body[0]}getTail(){return this.body[this.body.length-1]}setDirection(t){return this.direction!=t&&this.direction+t!=3&&(this.direction=t,!0)}fillStomach(t){this.stomach+=t,this.stomach=g(this.stomach)}fillSanity(t){this.sanity+=t,this.sanity=Math.min(1,this.sanity),this.sanity=Math.max(-1,this.sanity),this.sanity=g(this.sanity)}move(){const t=this.getHead();this.board.at(t).remove(n,this.id),this.body.length>1&&this.board.at(t).add(o,this.id);const e=this.getNewPos(t,this.direction);this.board.at(e).add(n,this.id),this.body.unshift(e)}grow(){if(this.stomach<1){const t=this.getTail();this.board.at(t).remove(o,this.id,1),this.body.pop()}else this.fillStomach(-1)}eat(t){if(null==t)return void[c,d].forEach((t=>this.eat(t)));const e=this.board.at(this.getHead()),s=e.getAndGroup(t,[this.board.getNoOwnerId(),this.id]);this.fillStomach((s[this.board.getNoOwnerId()]+s[this.id]+2*s.other)*O[t]),e.getOwnerIds(t).filter((t=>this.isStealing(t))).map((t=>this.board.getSnake(t))).forEach((s=>s.fillSanity(-I[t]*e.get(t,s.id)*5)))}enjoy(t){null!=t?this.fillSanity(this.board.at(this.getHead()).get(t)*I[t]):[c,d].forEach((t=>this.enjoy(t)))}bite(t){if(null==t)return void[n,o].forEach((t=>this.bite(t)));const e=this.board.at(this.getHead());e.getOwnerIds(t).filter((t=>this.isStealing(t))).forEach((s=>{const i=this.board.getSnake(s),r=i.indexOf(this.getHead());i.turnIntoCorpse(r+1),t==o&&(e.remove(o,i.id,1),i.body.pop()),i.fillSanity(5*-I[o])}))}isStealing(t){return t!=this.id&&t!=this.board.getNoOwnerId()}indexOf({x:t,y:e}){return this.body.findIndex((s=>s.x==t&&s.y==e))}turnIntoCorpse(t){for(let e=t;e<this.body.length;e++){const t=this.body[e];this.board.at(t).add(d,this.id),this.board.at(t).remove(o,this.id,1)}this.body.splice(t)}getNewPos({x:t,y:e},s){const{w:i,h:r}=this.board.getDim();return{x:(t+i+l[s])%i,y:(e+r+u[s])%r}}},t.addSnake(this.snake)}move(){for(;this.directionQueue.length>0&&!this.snake.setDirection(this.directionQueue[0]);)this.directionQueue.shift()}handleKeyEvents(t){if(Object.keys(this.keyCtrl).includes(t.key)){const e=this.keyCtrl[t.key];this.directionQueue.push(e)>4&&this.directionQueue.shift()}}},E=["rgb(244, 208, 63)","rgb(30, 130, 76)","rgb(214, 69, 65)"],S=[{w:0,s:3,a:2,d:1},{o:0,l:3,k:2,";":1}];window.onload=()=>{const t=document.getElementById("playground");t.width=2*t.clientWidth,t.height=2*t.clientHeight;const g=new class{constructor(t){this.canvas=t,this.board=new class{constructor(t,n){this.w=t,this.h=n,this.cells=new Array(t*n).fill().map((()=>new class{constructor(){this.objs={}}empty(){return 0==Object.keys(this.objs).length}add(t,e=0,s=1){const i=this.toKey(t,e);return this.objs[i]=this.objs[i]+s||s,this}remove(t,e,s){if(null==e)return this.getOwnerIds(t).forEach((e=>this.remove(t,e,s))),this;const i=this.toKey(t,e);return void 0!==this.objs[i]&&(this.objs[i]-=null!=s?s:this.objs[i]),this.objs[i]<=0&&delete this.objs[i],this}clear(){this.objs={}}get(t,e){if(null==e)return this.getOwnerIds(t).map((e=>this.get(t,e))).reduce(((t,e)=>t+e),0);const s=this.toKey(t,e);return this.objs[s]||0}getAndGroup(t,n){return n.reduce(((n,o)=>{return c=((t,e)=>{for(var s in e||(e={}))r.call(e,s)&&h(t,s,e[s]);if(i)for(var s of i(e))a.call(e,s)&&h(t,s,e[s]);return t})({},n),d={[o]:this.get(t,o)},e(c,s(d));var c,d}),{other:this.getOwnerIds(t).filter((t=>!n.includes(t))).map((e=>this.get(t,e))).reduce(((t,e)=>t+e),0)})}getOwnerIds(t){return Object.keys(this.objs).filter((e=>null==t||this.toType(e)==t)).map((t=>this.toOwnerId(t)))}getTypes(){return Object.keys(this.objs).map((t=>this.toType(t)))}toType(t){return Math.floor(parseInt(t)/10)}toOwnerId(t){return parseInt(t)%10}toKey(t,e){return 10*t+e}})),this.snakes=[]}getDim(){return{w:this.w,h:this.h}}at({x:t,y:e}){return this.cells[e*this.w+t]}put({x:t,y:e},s){this.cells[e*this.w+t]=s}generate(t,e){const s=this.cells.map(((t,e)=>({cell:t,idx:e}))).filter((t=>t.cell.empty())).map((t=>t.idx));if(0==s.length)return;const i=s[Math.floor(Math.random()*s.length)];this.cells[i].add(t,e)}addSnake(t){if(this.snakes.length>=2)return;t.board=this,t.id=this.snakes.length+1;const e=y[this.snakes.length];t.setDirection(e);const{w:s,h:i}=this.getDim(),r={};switch(e){case 2:r.x=s-1-Math.trunc(s/8),r.y=i-1-Math.trunc(i/3);break;case 3:r.x=s-1-Math.trunc(s/3),r.y=Math.trunc(i/8);break;case 0:r.x=Math.trunc(s/3),r.y=i-1-Math.trunc(i/8);break;default:r.x=Math.trunc(s/8),r.y=Math.trunc(i/3)}this.at(r).add(n,t.id),t.body.push(r);let{x:a,y:h}=r;for(;t.body.length<3&&a>0&&a<s-1&&h>0&&h<i-1;)a-=l[e],h-=u[e],this.at({x:a,y:h}).add(o,t.id),t.body.push({x:a,y:h});this.snakes.push(t)}getSnake(t){return this.snakes[t-1]}getOtherSnakes(t){return this.snakes.filter((e=>e!=this.getSnake(t)))}getNoOwnerId(){return 0}tick(){this.snakes.forEach((t=>t.move())),this.snakes.forEach((t=>t.eat())),this.snakes.forEach((t=>t.enjoy())),this.snakes.forEach((t=>t.grow())),this.snakes.filter((t=>t.sanity<=0)).forEach((t=>t.bite())),this.snakes.map((t=>this.at(t.getHead()))).forEach((t=>{t.getOwnerIds(c).forEach((t=>this.generate(c,t))),[c,d].forEach((e=>t.remove(e)))})),this.snakes.map((t=>t.toDebugStr())).forEach((t=>{return e=t,void(window.DEBUG&&console.log(e));var e}))}}(45,27),this.palette=new class{constructor(t){this.colors=t,this.caches={}}getCacheKey(t,e){return t+"-"+e}clearCache(){this.caches={}}get(t,e){const s=this.getCacheKey(t,e),i=this.caches[s]?this.caches[s]:this.create(t,this.colors[e]);return this.caches[s]=i,i}create(t,e){switch(t){case n:return this.createSnakeHead(e);case o:return this.createSnakeBody(e);case d:return this.createCorpse(e);case c:return this.createFood(e)}}createSnakeHead(t){const e=this.createCanvas({w:64,h:64}),s=e.getContext("2d"),i=new Path2D("M 2,2 h 60 v 60 h -60 Z"),{r:r,g:a,b:h,a:n}=p(t);return s.fillStyle=w({r:r,g:a,b:h,a:n-.2}),s.fill(i),e}createSnakeBody(t){const e=this.createCanvas({w:64,h:64}),s=e.getContext("2d"),i=new Path2D("M 2,2 h 60 v 60 h -60 Z"),{r:r,g:a,b:h,a:n}=p(t);return s.fillStyle=w({r:r,g:a,b:h,a:n-.5}),s.fill(i),e}createCorpse(t){const e=this.createCanvas({w:64,h:64}),s=e.getContext("2d"),{r:i,g:r,b:a,a:h}=p(t);return s.fillStyle=w({r:i,g:r,b:a,a:h-.2}),s.arc(32,32,15,0,2*Math.PI,!0),s.fill(),e}createFood(t){const e=this.createCanvas({w:64,h:64}),s=e.getContext("2d"),{r:i,g:r,b:a,a:h}=p(t);return s.fillStyle=w({r:i,g:r,b:a,a:h-.2}),s.arc(32,32,30,0,2*Math.PI,!0),s.fill(),e}createCanvas({w:t,h:e}){const s=document.createElement("canvas");return s.width=t,s.height=e,s}}(E),this.player_1=new j(S[0]),this.player_2=new j(S[1]),this.player_1.join(this.board),this.player_2.join(this.board),this.speed=4,this.lastMove=0,this.startTime=null}start(){this.board.snakes.forEach((t=>this.board.generate(c,t.id))),this.board.generate(c,this.board.getNoOwnerId());const t=()=>{null==this.startTime&&(this.startTime=performance.now());const e=performance.now()-this.startTime,s=this.lastMove+1e3/this.speed;e>=s&&(this.player_1.move(),this.player_2.move(),this.board.tick(),this.lastMove=s),k(this.canvas,this.board,this.palette),window.requestAnimationFrame(t)};window.requestAnimationFrame(t)}handleKeyEvents(t){this.player_1.handleKeyEvents(t),this.player_2.handleKeyEvents(t)}}(t);document.addEventListener("keydown",(t=>g.handleKeyEvents(t))),g.start()};
